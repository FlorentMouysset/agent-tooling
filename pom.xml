<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>irit.smac</groupId>
	<artifactId>agent-tooling</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>agent-tooling</name>
	<url>http://maven.apache.org</url>
	<organization>
		<name>IRIT - SMAC Team</name>
		<url>http://irit.fr/-SMAC-team-</url>
	</organization>
	<inceptionYear>2014</inceptionYear>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.host.url>http://localhost:9000/</sonar.host.url>
		<gmaven-plugin.version>1.4</gmaven-plugin.version>
		<groovy.version>2.3.5</groovy.version>
		<additionalparam>-Xdoclint:none</additionalparam>
	</properties>
	<dependencies>
		<!-- Spock -->
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>0.7-groovy-2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- cglib : for class mocking -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
			<scope>test</scope>
		</dependency>
		<!-- objenesis : enables mocking classes without default constructor -->
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<packaging>pom</packaging>
	<modules>
		<module>agent-logging</module>
		<module>agent-messaging</module>
		<module>agent-scheduling</module>
		<module>agent-plot</module>
		<module>avt</module>
	</modules>
	<build>
		<plugins>
			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
			</plugin>
			<!-- define Java version for eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- handle license files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.7</version>
				<configuration>
					<licenseName>lgpl_v3</licenseName>
					<roots>
						<root>src/main/java</root>
						<root>src/examples/java</root>
						<root>src/test/java</root>
					</roots>
					<!-- break some files otherwise -->
					<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
				</configuration>
				<executions>
					<execution>
						<id>update-license</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<!-- download license files -->
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.1.0</version>
			</plugin>
			<!-- JaCoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules />
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- SonarQube -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<sonar.sources>src/main/java</sonar.sources>
					<sonar.exclusions>file:**/src/main/java/**/*_.*</sonar.exclusions>
				</configuration>
			</plugin>
			<!-- Groovy -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>${gmaven-plugin.version}</version>
				<configuration>
					<providerSelection>2.0</providerSelection>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.gmaven.runtime</groupId>
						<artifactId>gmaven-runtime-2.0</artifactId>
						<version>${gmaven-plugin.version}</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>${groovy.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<includes>
						<include>**/*Test.class</include>
						<include>**/*Spec.class</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>license-maven-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>update-project-license</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmaven</groupId>
										<artifactId>gmaven-plugin</artifactId>
										<versionRange>[1.4,)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>